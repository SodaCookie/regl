{
  "name": "reglnative",
  "version": "0.1.6",
  "description": "Reason bindings to OpenGL",
  "scripts": {
    "postinstall": "eval $(dependencyEnv) && mkdir -p _build/src/ && gcc -I`ocamlc -where` -c src/soil_wrapper.c -o _build/src/libsoil_wrapper.a && cd SOIL/projects/makefile && mkdir -p obj && mkdir -p ../../lib && make && cd ../../../ && mkdir -p _build/SOIL/lib/ && mv SOIL/lib/libSOIL.a _build/SOIL/lib/libSOIL.a && node setcurrentdir.js",
    "start": "_build/src/app.out",
    "build": "eval $(dependencyEnv) && nopam && rebel -verbose",
    "buildexample": "npm run build && webpack _build/web/src/web_Tar__ExampleEntrypoint.js _build/web/src/app.js",
    "top": "eval $(dependencyEnv) && rtop",
    "env": "eval $(dependencyEnv) && env",
    "ocamldep": "eval $(dependencyEnv) && ocamldep",
    "editor": "eval $(dependencyEnv) && $EDITOR .",
    "whereisocamlmerlin": "eval $(dependencyEnv)a && which ocamlmerlin-reason",
    "mlre": "pbpaste | ./node_modules/reason/refmt_impl.native -parse ml -print re -use-stdin true -is-interface-pp false",
    "reml": "pbpaste | ./node_modules/reason/refmt_impl.native -parse re -print ml -use-stdin true -is-interface-pp false"
  },
  "dependencies": {
    "tgls-actual": "https://github.com/bsansouci/tgls.git#packagejson",
    "@opam-alpha/topkg": "*",
    "@opam-alpha/merlin": "^ 2.5.0",
    "dependency-env": "https://github.com/npm-ml/dependency-env.git",
    "tsdl-actual": "https://github.com/bsansouci/tsdl.git#packagejson",
    "nopam": "https://github.com/yunxing/nopam.git",
    "realpath": "*",
    "reason": "https://github.com/facebook/reason.git",
    "reglinterface": "^0.1.5"
  },
  "exportedEnvVars": {
    "PKG_CONFIG_PATH": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "."
    }
  },
  "rebel": {},
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bsansouci/reglnative.git"
  },
  "author": "bsansouci & schmavery",
  "devDependencies": {
    "lerna": "2.0.0-beta.30"
  }
}
